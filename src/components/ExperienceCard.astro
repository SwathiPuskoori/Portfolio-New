---
import { Image } from 'astro:assets'
import type { ImageMetadata } from 'astro'
import { cn } from '@/utils'

type Client = {
  name: string
  logoPath?: string
  logoAlt?: string
  details: string[]
}

interface Props {
  heading: string
  company: string
  location: string
  date: string
  imagePath?: string
  altText?: string
  companyUrl?: string
  clients?: Client[]
  imageClass?: string
  class?: string
}

const {
  heading,
  company,
  location,
  date,
  imagePath,
  altText = '',
  companyUrl,
  clients = [],
  imageClass,
  class: className,
} = Astro.props as Props

const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/*.{jpeg,jpg,png,gif,webp}')

if (imagePath && !images[imagePath]) {
  throw new Error(`"${imagePath}" missing in /src/assets/*`)
}
---

<div
  class={cn(
    // Card container
    'group relative flex flex-col rounded-2xl border border-border/70 bg-primary-foreground/80',
    'px-5 py-4 shadow-sm transition-all duration-300',
    'hover:shadow-md hover:border-border focus-within:shadow-md',
    'focus-within:ring-1 focus-within:ring-primary/50',
    'backdrop-blur supports-[backdrop-filter]:bg-primary-foreground/60',
    className
  )}
  aria-label="Experience Card"
>
  <!-- Header -->
  <div class="flex gap-x-4 items-start">
    {imagePath && (
      companyUrl ? (
        <a
          href={companyUrl}
          target="_blank"
          rel="noopener noreferrer"
          class={cn(
            'flex-shrink-0 grid place-items-center w-14 h-14 overflow-hidden rounded-xl',
            'ring-1 ring-border/60 hover:ring-border transition'
          )}
          aria-label={`Visit ${company} website`}
        >
          <Image
            src={images[imagePath]!()}
            alt={altText || company}
            class={cn(
              'h-10 w-auto object-contain transition-transform duration-300 dark:invert',
              'group-hover:scale-[1.03] motion-reduce:transform-none',
              imageClass
            )}
          />
        </a>
      ) : (
        <div
          class={cn(
            'flex-shrink-0 grid place-items-center w-14 h-14 overflow-hidden rounded-xl',
            'ring-1 ring-border/60'
          )}
        >
          <Image
            src={images[imagePath]!()}
            alt={altText || company}
            class={cn('h-10 w-auto object-contain', imageClass)}
          />
        </div>
      )
    )}

    <div class="flex flex-col">
      <h2 class="text-base font-semibold leading-snug tracking-tight">{heading}</h2>
      <p class="text-sm text-muted-foreground">
        {company} â€¢ {location}
      </p>
      <p class="text-xs text-muted-foreground/90">{date}</p>
    </div>
  </div>

  <!-- Clients Accordion -->
  {clients.length > 0 && (
    <div class="mt-4 w-full space-y-2" role="list" aria-label="Client work">
      {clients.map((client) => (
        <details
          class={cn(
            'group/acc rounded-xl border border-border/60 bg-muted/40 p-3 transition-colors',
            'hover:border-border open:bg-muted/50'
          )}
          role="listitem"
        >
          <summary
            class={cn(
              'flex w-full items-center justify-between cursor-pointer select-none',
              'text-sm font-medium text-foreground',
              'outline-none focus-visible:ring-2 focus-visible:ring-primary/40 rounded-lg',
              'px-1 py-1'
            )}
          >
            <span class="flex items-center gap-x-2">
              {client.logoPath && images[client.logoPath] && (
                <Image
                  src={images[client.logoPath]!()}
                  alt={client.logoAlt ?? client.name}
                  class="w-5 h-5 object-contain"
                />
              )}
              <span class="leading-6">{client.name}</span>
            </span>

            <!-- Chevron icon -->
            <svg
              class="h-4 w-4 shrink-0 transition-transform duration-300 group-open/acc:rotate-180 motion-reduce:transition-none"
              viewBox="0 0 20 20"
              fill="currentColor"
              aria-hidden="true"
            >
              <path
                fill-rule="evenodd"
                d="M5.23 7.21a.75.75 0 0 1 1.06.02L10 10.94l3.71-3.71a.75.75 0 1 1 1.06 1.06l-4.24 4.24a.75.75 0 0 1-1.06 0L5.21 8.29a.75.75 0 0 1 .02-1.08z"
                clip-rule="evenodd"
              />
            </svg>
          </summary>

          <!-- Animated content: height + opacity -->
          <ul
            class={cn(
              'ml-7 mt-2 list-disc space-y-1.5 text-xs text-muted-foreground',
              // Animation: from collapsed to open, with reduced-motion fallback
              'overflow-hidden transition-[grid-template-rows,opacity] duration-300 ease-out',
              'grid grid-rows-[0fr] opacity-0 group-open/acc:grid-rows-[1fr] group-open/acc:opacity-100',
              'motion-reduce:transition-none motion-reduce:opacity-100 motion-reduce:grid-rows-[1fr]'
            )}
          >
            <div class="min-h-0">
              {client.details.map((point) => <li class="leading-relaxed">{point}</li>)}
            </div>
          </ul>
        </details>
      ))}
    </div>
  )}

  <slot />
</div>
